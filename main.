from pygame import *
from random import randint
window = display.set_mode((700, 500))
clock = time.Clock()
FPS = 60


class GameSprite(sprite.Sprite):
    def __init__(self, play_x, play_y, play_image, speed, width=200, height=200):
        super().__init__()
        self.image = transform.scale(image.load(play_image),(width, height))
        self.speed = speed
        self.rect = self.image.get_rect()
        self.rect.x = play_x
        self.rect.y = play_y
        self.direction = 'left'
    def reset(self):
        window.blit(self.image, (self.rect.x, self.rect.y))

class Picture(GameSprite):
    def update_l(self):
        keys_pressed = key.get_pressed()
        if keys_pressed[K_w] and self.rect.y > 10:
            self.rect.y -= self.speed
        if keys_pressed[K_s] and self.rect.y < 495:
            self.rect.y += self.speed
    def update_r(self):
        keys_pressed = key.get_pressed()
        if keys_pressed[K_UP] and self.rect.y > 10:
            self.rect.y -= self.speed
        if keys_pressed[K_DOWN] and self.rect.y < 495:
            self.rect.y += self.speed

score = 0

font.init()
Comic_Sans = font.Font(None, 70)
win_l = Comic_Sans.render('LEFT WIN!', 1, (0, 255, 0))
win_r = Comic_Sans.render('RIGHT WIN!', 1, (0, 255, 0))





wall_1 = Picture(5, 250, 'wall_1.jpg', 10, 30, 100)
wall_2 = Picture(665, 250, 'wall_1.jpg', 10, 30, 100)
ball = Picture(350, 250, 'ball.png', 10, 40, 40)

speed_x = 3
speed_y = 3



finish = False
while True:
    scoore = Comic_Sans.render('Score:' + str(score), 1, (0, 0, 0))
    ball.rect.y += speed_y
    ball.rect.x += speed_x
    for e in event.get():
        if e.type == QUIT:
            exit()
    if finish != True:
        window.fill((200, 66, 89))

        if ball.rect.y < 0 or ball.rect.y > 460:
            speed_y *= -1

        if sprite.collide_rect(wall_1, ball):
            score += 1
            speed_x *= -1

        if sprite.collide_rect(wall_2, ball):
            score += 1
            speed_x *= -1

        if ball.rect.x < 0:
            window.blit(win_r, (250, 150))
            finish = True

        if ball.rect.x > 665:
            window.blit(win_l, (250, 150))
            finish = True

        window.blit(scoore, (275, 25))
        ball.reset()
        wall_1.reset()
        wall_1.update_l()
        wall_2.reset()
        wall_2.update_r()


    display.update()
    clock.tick(FPS)
